//****QUEUE USING SINGLE lINKED LIST***

#include<bits/stdc++.h>
using namespace std;
class Node
{
    public:
    int data;
    Node* next;
};

class Queue
{
    private:
    Node* front;
    Node* rear;
    
    public:
    
    
    Queue();
    bool isEmpty();
    void enqueue(int x);
    int dequeue();
    void display();
      
    
};

Queue::Queue()
{
   front=nullptr;
   rear=nullptr;
   
    
}

bool Queue::isEmpty()
{
    if(front==nullptr )
    return true;
    
    return false;
    
    
}

void Queue:: enqueue(int x)
{
    Node* t=new Node;
    if(t==nullptr)
    {
        
        cout<<"Queue is full"<<endl;
    }
    else
    {
        t->data=x;
        t->next=nullptr;
        
        if(front==nullptr)
        {
            front=t;
            rear=t;
        }
        else
        {
            rear->next=t;
            rear=t;
        }
    }
    
}

int Queue:: dequeue()
{
    int x=-1;
    Node* p;
    if(isEmpty())
    {
        cout<<"Queue is emptyt";
        
    }
    else
    
    {
        p=front;
        front=front->next;
        x=p->data;
        delete p;
    }
    return x;
    
    
}

void Queue:: display()
{
    Node* p=front;
    if(isEmpty())
    {
        cout<<"Empty";
    }
        else
        {
           while(p!=nullptr)
           {
               cout<<p->data<<endl;
               p=p->next;
           }
        }
    
}

int main()
{
    
    
    Queue q;
    
    q.enqueue(1);
    q.enqueue(6);
    q.enqueue(5);
    q.enqueue(8);
    q.enqueue(3);
    
    
    q.dequeue();
    
    
    cout<<"Display"<<endl;
    
    q.display();
    
    
    return 0;
       
    
}